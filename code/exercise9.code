//INICIALIZACION
code['h00] = {`LDI, `R0, 8'd10}; //iniciar contador en 10
code['h01] = {`STS, `R0, 8'hf1}; //guardar 10 en port01

//REGISTER VALOR 1
code['h02] = {`LDI, `R1, 8'd01}; //iniciar R1 en 1

//BUCLE PRINCIPAL
code['h03] = {`SUB, `R0, 5'd0, `R1}; //restar 1 del contador (R0)
code['h04] = {`STS, `R0, 8'hf1}; //guardar el resultado en port01
code['h05] = {`BRZS, 8'h07}; //si el resultado es 0, saltar al final
code['h06] = {`JMP, 3'd0, 8'h03}; //si no es 0, continuar el bucle

//FINAL
code['h07]={`LDI, `R4, 8'h88}; //iniciar register4 en 136
code['h08]={`STS, `R4, 8'hf2}; //guardar 136 en port02
code['h09]={`STS, `R4, 8'hf1}; //guardar 136 en port01
code['h10]={`STOP, 11'd0}; //fin
